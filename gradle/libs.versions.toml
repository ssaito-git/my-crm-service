[versions]
jackson = "2.17.0"
flyway = "10.11.0"

[libraries]
# Spring
spring-context = { module = "org.springframework:spring-context", version = "6.1.6" }

# Spring Boot
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools" }
spring-boot-starter-aop = { module = "org.springframework.boot:spring-boot-starter-aop" }
spring-boot-starter-jdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc" }
spring-boot-starter-oauth2-client = { module = "org.springframework.boot:spring-boot-starter-oauth2-client" }
spring-boot-starter-oauth2-resource-server = { module = "org.springframework.boot:spring-boot-starter-oauth2-resource-server" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux" }

# Springdoc-openapi
springdoc-openapi-starter-webmvc-api = { module = "org.springdoc:springdoc-openapi-starter-webmvc-api", version = "2.3.0" }

# Ktor Server
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation" }
ktor-server-core-jvm = { module = "io.ktor:ktor-server-core-jvm" }
ktor-server-freemarker = { module = "io.ktor:ktor-server-freemarker" }
ktor-server-freemarker-jvm = { module = "io.ktor:ktor-server-freemarker-jvm" }
ktor-server-netty-jvm = { module = "io.ktor:ktor-server-netty-jvm" }
ktor-server-sessions-jvm = { module = "io.ktor:ktor-server-sessions-jvm" }

# Ktor Client
ktor-client-core = { module = "io.ktor:ktor-client-core" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation" }

# Logback
logback-classic = { module = "ch.qos.logback:logback-classic", version = "1.5.5" }

# WebAuthn4J
webauthn4j-core = { module = "com.webauthn4j:webauthn4j-core", version = "0.22.2.RELEASE" }

# Jackson
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-dataformat-cbor = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }

# jackson-databind-nullable
jackson-databind-nullable = { module = "org.openapitools:jackson-databind-nullable", version = "0.2.6" }

# Nimbus
oauth2-oidc-sdk = { module = "com.nimbusds:oauth2-oidc-sdk", version = "10.9.1" }

# jOOQ
jooq = { module = "org.jooq:jooq", version = "3.19.7" }

# kotlin-result
kotlin-result = { module = "com.michael-bull.kotlin-result:kotlin-result", version = "2.0.0" }

# Flyway
flyway-core = { module = "org.flywaydb:flyway-core", version.ref = "flyway" }
flyway-database-postgresql = { module = "org.flywaydb:flyway-database-postgresql", version.ref = "flyway" }

# PostgreSQL JDBC Driver
postgresql = { module = "org.postgresql:postgresql", version = "42.7.3" }

# JUnit
junit-bom = { module = "org.junit:junit-bom", version = "5.10.2" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }

# Testcontainers
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version = "1.19.8" }
testcontainers = { module = "org.testcontainers:testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }

# my-oidc-provider
myoidcprovider-ktor = { module = "myoidcprovider:ktor", version = "0.0.1" }

[plugins]
# Spring
spring = { id = "org.jetbrains.kotlin.plugin.spring", version = "1.9.22" }
springframework-boot = { id = "org.springframework.boot", version = "3.2.1" }
spring-dependency-management = { id = "io.spring.dependency-management", version = "1.1.3" }

# Springdoc-openapi
openapi-gradle-plugin = { id = "org.springdoc.openapi-gradle-plugin", version = "1.8.0" }

# Ktor
ktor = { id = "io.ktor.plugin", version = "2.3.10" }

# Kotlin Serialization
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version = "1.9.23" }

# jOOQ
jooq-codegen-gradle = { id = "org.jooq.jooq-codegen-gradle", version = "3.19.3" }

# Flyway
flyway = { id = "org.flywaydb.flyway", version = "10.6.0" }

# gradle-docker-compose-plugin
docker-compose = { id = "com.avast.gradle.docker-compose", version = "0.17.6" }
